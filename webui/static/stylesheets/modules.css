/* UNICEF RapidSMS UI
 * vim:set noet:
 * --
 * modules.css
 * --
 * This stylesheet defines the look of "modules",
 * which is a concept stolen from django admin,
 * to break the page into isolated chunks of
 * related links and/or functionality */


div.module {
	margin-top: 2em;
	position: relative;
}

#inner div.module:first-child {
	margin-top: 0; }





/* module headers are mostly ripped off from
 * django admin, although here, we never use
 * <caption>, to keep things simple (they have
 * surprisingly kooky semantics) */
h2 {
	background: #74d7e3 url(../images/h2-bg.png) repeat-x;
	border-bottom: 1px solid #4bd;
	color: #fff;
	font-weight: bold;
	font-size: 100%;
	margin: 0;
	padding: 0.5em;
	text-align: left;
	white-space: nowrap;
}
		
	/* additional, less important info can
	 * be wrapped in a span to dullify it */
	h2 span {
		color: #e3f7f9;
		font-size: 80%;
	}




table {
	border-collapse: collapse;
}	

	tr { }
	
		td, th {
			padding: 0.5em;
			border-top: 1px solid #eee; 
		}
		
			th {
				font-weight: normal;
				text-align: left;
			}
			
				thead th {
					background: #e1e1e1 url(../images/table-header-bg.png) repeat-x 100% 0;
					border-top: none;
					color: #444;
				}

			/* for rows which have headers on the left,
			 * remove the fancy graident and bump the
			 * title against the content */
			tr.horiz-th th {
				background: #e1e1e1;
				text-align: right;
			}
		
			/* a 1px border between each line
			 * TODO: why isn't this on a <tr>? */
			tbody td, tbody th {}
			
			/* TODO: docs */
			td a.unknown {
				color: #66BDDD;
				font-style: italic; }

		
	tr.no-data { }
		
			tr.no-data td {
				text-align: center;
				background: #f8f8ff;
				padding: 2em;
				color: #aaa;
			}
			
			tr.no-data td a.add {
				display: block;
				padding-top: 0.625em;
				font-size: 80%;
			}
	
	tr.depth-1 th { padding-left: 2em;  }
	tr.depth-2 th { padding-left: 4em;  }
	tr.depth-3 th { padding-left: 6em;  }
	tr.depth-4 th { padding-left: 8em;  }
	tr.depth-5 th { padding-left: 10em; }
	tr.depth-6 th { padding-left: 12em; }
	tr.depth-7 th { padding-left: 14em; }
	tr.depth-8 th { padding-left: 16em; }
	
	tfoot {
		background: #eee url("../images/table-footer-bg.png") repeat-x 0 100%;
		font-size: 80%;
	}
		
		/* no padding in the footer cell; the links will
		 * float and pad themselves, so the clickable blocks
		 * will be bigger and easier to hit */
		tfoot td {
			padding: 0; }
		
			/* footer links are dull, because they're
			 * less important than the data. TODO: is this
			 * totally stupid? (i don't care, it's pretty) */
			tfoot a,
			tfoot span {
				display: block;
				float: right;
				padding: 0.5em;
				color: #aaa;
			}
			
				/* footer links can be broken up with spans,
				 * which look the same, except super dull */
				tfoot span {
					color: #ddd; }
				
				/* highlight hover links brighter than
				 * usual, since they're harder to spot */
				tfoot a:hover {
					background: #fff; }
		
			/* move all paginator links to the left,
			 * to separate from additional views and
			 * exporting, which lives on the right */
			tfoot .paginator,
			tfoot .paginator a {
				float: left; }
			
				tfoot .paginator a.active {
					background: #eee;
					color: #000;
				}


/* modules can optionally contain a small
 * "toolbar", which hangs in the top right */
.module div.toolbar {
	position: absolute;
	top: 0;
	right: 0;
	height: 2em;
	line-height: 2em;
}
	/* toolbar links (add, see more, do
	 * other things) TODO: make pretty */
	.module div.toolbar a {
		display: block;
		float: right;
		color: #fff;
		margin-right: 0.625em;
		padding-left: 21px;
		background-repeat: no-repeat;
		background-position: 0 50%;
		font-size: 80%;
	}

	.module div.toolbar span {
		display: block;
		float: right;
		color: #fff;
		padding-left: 21px;
		font-size: 80%;
	}
	
		.module div.toolbar a.add {
			background-image: url("../icons/16/add.png");
		}
		.module div.toolbar a.prev {
			background-image: url("../icons/16/go-previous.png");
		}
		.module div.toolbar a.next {
			background-image: url("../icons/16/go-next.png");
		}
		.module div.toolbar a.first {
			background-image: url("../icons/16/go-first.png");
		}
		.module div.toolbar a.last {
			background-image: url("../icons/16/go-last.png");
		}

.module form { }
	
	/* recursive models can be displayed as a
	 * tree within a <select>, by ordering them
	 * cleverly (see RecursiveManager) and adding
	 * their "depth" to the class to bump them
	 * to the right, indicating their ancestry */
	.module option.depth-1 { padding-left: 1em; }
	.module option.depth-2 { padding-left: 2em; }
	.module option.depth-3 { padding-left: 3em; }
	.module option.depth-4 { padding-left: 4em; }
	.module option.depth-5 { padding-left: 5em; }
	.module option.depth-6 { padding-left: 6em; }
	.module option.depth-7 { padding-left: 7em; }
	.module option.depth-8 { padding-left: 8em; }
	
	.module div.invalid { }
		
		/* if we're using a capable browser (ie, not IE6),
		 * and the containing module is directly inside the
		 * #inner (so we know it's hard against the edge of
		 * the RapidSMS "sheet of paper", add faux notches
		 * to the edge of troublesome fields, for attention
		 * TODO: this is a cool attention-grabbing affect.
		 *       perhaps it should be made more generic? */
		#inner > .module div.invalid {
			border-right: 0.5em solid #eef;
			border-left: 0.5em solid #eef;
			padding: 0 0.5em;
			margin: 0 -1em;
		}
	
	.module form .no-data {
		display: inline-block;
		background: #f8f8ff;
		text-align: center;
		padding: 2em;
		color: #aaa;
	}
		
		.module form .no-data a.add {
			display: block;
			padding-top: 0.625em;
			font-size: 80%;
		}
	
	/* most of the time, labels should sit
	 * directly above their field, creating
	 * 1em of space (margin) from the previous
	 * field or (if first) the module header */
	.module label {
		display: block;
		margin: 2em 0 0.5em 0;
	}
		
		/* but sometimes... they can provide a clearer distinction between
		 * related fields, by sitting AFTER the field. in these cases, the
		 * input+field should be divved, to clear the next pair. the labels
		 * should still be explicit, for accessibility, but can be partially
		 * masked by span.acc for teh pretty. something like:
		 *
		 * <div>
		 *   <label>Full Name</label>
		 *   <div>
		 *     <input name="first" id="fm-first">
		 *     <label for="fm-first">First<span class="acc"> Name</span></label>
		 *   </div>
		 *   <div>
		 *     <input name="last" id="fm-last">
		 *     <label for="fm-last">Last<span class="acc"> Name</span></label>
		 *   </div>
		 * </div>
		 */
		.module label.suffix {
			display: inline;
			font-style: italic;
			font-size: 80%;
			color: #aaa;
			margin: 0;
		}
		
		/* likewise, the label captioning the invalid field is marked as
		 * "invalid" (not error, to differentiate from the error label) */
		.module label.invalid {
			color: #a00; }
		
		/* when a field is marked as invalid by the RapidSMS client-side
		 * validation lib (a very lightly wrapped jQuery validation lib),
		 * it inserts an error label just after the field (in the dom),
		 * and positions it directly to the right (with javascript) */
		.module label.error {
			background: #fff url("../icons/16/exclamation.png") no-repeat 0 50%;
			margin: 0 0 0 0.25em;
			padding-left: 16px;
			min-height: 16px;
			color: #d00;
		}
		
			/* spacing between icon and text */
			.module label.error span {
				padding-left: 0.25em; }
			
			/* hide the error message until the div containing the field
			 * and error label is hovered - this is big and easy to hit
			 * HACK: use CSS2 to prevent IE6 from hiding the text */
			.module form div       > label.error { text-indent: -9999px; }
			.module form div:hover > label.error { text-indent: 0; }
	
	/* make the auto-generated (by clonable.js)
	 * add+remove buttons look like tiny little
	 * icons. they're seldom used, so should
	 * stay out of the way */
	input.js-add,
	input.js-del {
		cursor: pointer;
		border: 0;
		padding: 0;
		width: 16px;
		height: 16px;
		overflow: hidden;
		text-indent: -9999px;
	}
	
	input.js-add { background: url("../icons/16/add.png") no-repeat; }
	input.js-del { background: url("../icons/16/delete.png") no-repeat; }
	
	/* some options are less interesting than others; like
	 * None, or Disabled, or Default; so mark them dull */
	.module form option.na {
		font-style: italic;
		color: #aaa;
	}
	
	/* for fields that need a longer description, help
	 * text can be added below. roughly analogous to
	 * django's models.Model.help_text */
	.module p.help {
		margin-top: 0.625em;
		font-size: 80%;
		color: #ccc;
		width: 30em;
	}
	
	/* to wrap any submission or action buttons, and
	 * receive javascript/ajax notifications in response */
	.module div.submit {
		margin-top: 2em;
	}
	
		/* when the validation lib catches (an) error(s)
		 * during submission, it injects a note into the
		 * submit buttons box. as usual, make it pretty */
		.module div.submit .errors { }
		
			.module div.submit .errors p {
				display: inline-block;
				border: 1px solid #fdd;
				background: #fee;
				margin:  0 0 1em 0;
				padding: 1em;
				color: #d00;
			}

